generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Kindergarten {
  id Int @id @default(autoincrement())

  thumbnail String?
  phone     String? @unique
  email     String? @unique
  website   String?

  languages Language[] @relation("KindergartenToLanguage")

  ageGroups      Int[]
  openingHours   String[]
  teachersCount  Int?
  groups         Int?
  mealPlan       String[]
  sleepingPlaces Boolean?

  facebook  String?
  instagram String?
  twitter   String?
  youtube   String?
  telegram  String?
  whatsapp  String?
  viber     String?

  city         City                      @relation(fields: [cityId], references: [id])
  cityId       Int
  area         Area                      @relation(fields: [areaId], references: [id])
  areaId       Int
  localization KindergartenTranslation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([cityId])
  @@index([areaId])
}

model KindergartenTranslation {
  kindergartenId Int @id

  name_en String
  name_ge String
  name_ru String

  address_en String
  address_ge String
  address_ru String

  shortDescription_en String?
  shortDescription_ge String?
  shortDescription_ru String?

  description_en String?
  description_ge String?
  description_ru String?

  kindergarten Kindergarten? @relation(fields: [kindergartenId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model School {
  id Int @id @default(autoincrement())

  thumbnail String?
  phone     String? @unique
  email     String? @unique
  website   String?

  languages Language[] @relation("SchoolToLanguage")

  openingHours String[]

  facebook  String?
  instagram String?
  twitter   String?
  youtube   String?
  telegram  String?
  whatsapp  String?
  viber     String?

  city         City                @relation(fields: [cityId], references: [id])
  cityId       Int
  area         Area                @relation(fields: [areaId], references: [id])
  areaId       Int
  localization SchoolTranslation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([cityId])
  @@index([areaId])
}

model SchoolTranslation {
  schoolId Int @id

  name_en String
  name_ge String
  name_ru String

  address_en String
  address_ge String
  address_ru String

  shortDescription_en String?
  shortDescription_ge String?
  shortDescription_ru String?

  description_en String?
  description_ge String?
  description_ru String?

  school School? @relation(fields: [schoolId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Language {
  id Int @id @default(autoincrement())

  name_en String
  name_ge String
  name_ru String
  
  code String

  schools       School[]       @relation("SchoolToLanguage")
  kindergartens Kindergarten[] @relation("KindergartenToLanguage")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model City {
  id Int @id @default(autoincrement())

  name_en String
  name_ge String
  name_ru String

  school       School[]
  kindergarten Kindergarten[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Area {
  id Int @id @default(autoincrement())

  name_en String
  name_ge String
  name_ru String

  school       School[]
  kindergarten Kindergarten[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
